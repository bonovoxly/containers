version: "2"
settings:
  # The Conductor container does the heavy lifting, and provides a portable
  # Python runtime for building your target containers. It should be derived
  # from the same distribution as you're building your target containers with.
  conductor_base: ubuntu:16.04
defaults:
  apt_packages:
    - bash
    - curl
    - git
    - jq
    - iputils-ping
    - locales
    - man
    - npm
    - python-pip
    - silversearcher-ag
    - sudo
    - unzip
    - vim
    - wget
    - zsh
  google_cloud_sdk: 'https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-148.0.1-linux-x86_64.tar.gz'
  npm_packages:
    - azure-cli
  pip_packages:
    - markupsafe
    - boto
    - boto3
    - ansible
    - awscli
    - dnspython
  terraform_version: 0.9.8
  users:
    - name: me
      shell: /bin/zsh
      groups: sudo
      shell_config: .zshrc
services:
  # awsdev:
  #   from: ubuntu:16.04
  #   entrypoint: [/bin/bash]
  #   working_dir: /root
  #   user: root
  # azuredev:
  #   from: ubuntu:16.04
  #   entrypoint: [/bin/bash]
  #   working_dir: /root
  #   user: root
  cloud:
    from: ubuntu:16.04
  #  entrypoint: [/bin/bash]
  #  working_dir: /root
  #  become: yes
  #  user: root
    # vars_files:
      # - vars/cloud.yml
    roles:
      - role: linux.packages
      - role: linux.add_user
      - role: linux.locale
      - role: linux.oh_my_zsh
      - role: linux.vim
      - role: linux.terraform_install
      - role: ubuntu.gcloud_utils
  # googledev:
  #   from: ubuntu:16.04
  #   entrypoint: [/bin/bash]
  #   working_dir: /root
  #   user: root
registries: {}
  # Add optional registries used for deployment. For example:
  #  google:
  #    url: https://gcr.io
  #    namespace: my-cool-project-xxxxxx
